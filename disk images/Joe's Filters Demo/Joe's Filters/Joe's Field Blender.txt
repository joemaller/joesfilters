//                         v3.5 //	                  //	   wvwwvwvww    //	   \                  /  //	     \______/  //	                          	//       Joe's Filters     //   for Final Cut Pro // (C) 2002 Joe Maller// http://www.joesfilters.com// http://www.fxscriptreference.orgfilter "Joe's Field Blender";group "Joe's Video & Time Filters";input FieldBlender, "Blend", slider, 60, 0, 100;input FieldMethod, "Method", popup, 1, "Interpolate", "Field Double";input title, "Joe's Filters", Label,"";input title1, "www.joesfilters.com", Label,"";FullFramecodefloat i, j;point infieldUP[4], infieldDOWN[4], outfield[4];boundsOf(dest, infieldUP);infieldDOWN = infieldUP;image xbuffer[(infieldUP[1].x - infieldUP[0].x)][(infieldUP[2].y - infieldUP[0].y)];image UPfBuffer[(infieldUP[1].x - infieldUP[0].x)][((infieldUP[2].y - infieldUP[0].y) * FieldMethod/2)];image DOWNfBuffer[(infieldUP[1].x - infieldUP[0].x)][((infieldUP[2].y - infieldUP[0].y) * FieldMethod/2)];BoundsOf(UPfBuffer, outfield);j = outfield[0].y;for i = infieldUP[0].y to infieldUP[2].y step 2;	infieldUP[0].y = i;	infieldUP[1].y = i;	infieldUP[2].y = i + 1;	infieldUP[3].y = i + 1;		infieldDOWN[0].y = i + 1;	infieldDOWN[1].y = i + 1;	infieldDOWN[2].y = i + 2;	infieldDOWN[3].y = i + 2;		outfield[0].y = j;	// j starts at the topmost row of pixels in outfield and counts up	outfield[1].y = j;		outfield[2].y = j + 1;	outfield[3].y = j + 1;	BlitRect(src1, infieldUP, UPfBuffer, outfield);	BlitRect(src1, infieldDOWN, DOWNfBuffer, outfield);	j++		// increases the target row, used to build a half-height image.		if FieldMethod != 1;					// meaning field-doubled, copies the same source row into the next row of target pixels		outfield[0].y = j;		outfield[1].y = j;			outfield[2].y = j + 1;		outfield[3].y = j + 1;			BlitRect(src1, infieldUP, UPfBuffer, outfield)		BlitRect(src1, infieldDOWN, DOWNfBuffer, outfield)			j++;		// increases the target row again for field doubled images 	end if;next;if FieldMethod != 1;		// meaning field-doubled, in which case fBuffers are full height	xbuffer= UPfBuffer;	dest = DOWNfBuffer;else;		BoundsOf(UPfBuffer, infieldUP);	BoundsOf(dest, outfield);		BlitRect(UPfBuffer, infieldUP, xbuffer, outfield);	BlitRect(DOWNfBuffer, infieldUP, dest, outfield);end if;Matte(xbuffer, dest, dest, FieldBlender/100, kalpha);