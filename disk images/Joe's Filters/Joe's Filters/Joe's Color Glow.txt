//                         v3.5 //	                  //	   wvwwvwvww    //	   \                  /  //	     \______/  //	                          	//       Joe's Filters     //   for Final Cut Pro // (C) 2002 Joe Maller// http://www.joesfilters.com// http://www.fxscriptreference.orgfilter "Joe's Color Glow";group "Joe's Stylize Filters";input label0, "Select:", Label, ""input SampleColor, "Sample Color:", Color, 255, 255, 255, 255;input Tolerance, "Tolerance", Slider, 100, 0, 511;input Soften, "Edge Soften", Slider, 0, 0, 255;input inverter, "Invert", CheckBox, 0input label1, "Modify:", Label, ""input MatteBlur, "Blur Selection", Slider, 40, 0, 150 ramp 75;input threshold, "Threshold", slider, 100, 0, 255;input steps, "Steps", slider, 255, 2, 255input label2, "Apply:", Label, ""input BlurType, "Use", Popup, 1, "Color", "Image"input FillColor, "Fill Color:", Color, 255, 255, 255, 255;input BlurAmount, "Blur", Slider, 10, 0, 150 ramp 75;input ApplyAs, "Mode", Popup, 3, "Normal", "Multiply", "Screen", "Overlay", "Lighten", "Darken", "Add", "Subtract", "Difference";input Opacity, "Opacity", Slider, 100, 0, 100 label "%"input title, "Joe's Filters", Label,"";input title1, "www.joesfilters.com", Label,"";InformationFlag("YUVaware")codefloat w, h, i;dimensionsOf(Dest, w, h);image xbuffer[w][h], xbuffer2[w][h];float zoomfactor; zoomfactor = w/720	if GetPixelFormat(dest) == kFormatYUV219;	if BlurType == 1; setpixelformat(xbuffer, kFormatRGB255); ChannelFill(xbuffer, 255, FillColor.r, FillColor.g, FillColor.b); end if	if BlurType == 2; ConvertImage(src1, xbuffer, kFormatRGB255); end ifelse	if BlurType == 1; ChannelFill(xbuffer, 255, FillColor.r, FillColor.g, FillColor.b); end if	if BlurType == 2; xbuffer = src1; end ifend ifif GetPixelFormat(src1) != kFormatRGB255	ConvertImage(src1, xbuffer2, kFormatRGB255)else	setpixelformat(xbuffer2, kFormatRGB255)	xbuffer2 = src1end ifRGBColorKey(xbuffer2, xbuffer, SampleColor.r, Tolerance, SampleColor.g, Tolerance, SampleColor.b, Tolerance, Soften, false)if inverter==0; InvertChannel(xbuffer, xbuffer, 1, 0, 0, 0); end ifif MatteBlur > 0	BlurChannel(xbuffer, dest, MatteBlur * zoomfactor, 1,0, 0, 0, aspectOf(Dest))	ChannelCopy(dest, xbuffer, kalpha, knone, knone, knone)end iffloat clut[256]for i = threshold to 255		clut[i] = 1next;if steps >2	float nearEnd, stepup, stepdown;	if 255 - threshold >  threshold;		nearEnd = threshold;	else;		nearEnd = 255  - threshold;	end if;	if steps > nearEnd * 2; steps = nearEnd *2 ; end if	stepdown = threshold - (steps/2)	stepup = stepdown  + steps	if stepup >= 255; stepup = 255; end if	if stepdown <= 0; stepdown = 0; end if	if steps >0		for i = stepdown to stepup			clut[i] = (i - stepdown)/steps;		next;	end ifend if;levelMap(xbuffer, dest, clut, linearramp, linearramp, linearramp);xbuffer=destif BlurAmount > 0;	dest = xbuffer	Blur(dest, xbuffer, BlurAmount * zoomfactor, aspectOf(Dest))end if;if ApplyAs ==1; Matte(xbuffer, xbuffer2, dest, Opacity/100, kalpha); end ifif ApplyAs ==2; Multiply(xbuffer2, xbuffer, dest, Opacity/100, kalpha); end ifif ApplyAs ==3; Screen(xbuffer2, xbuffer, dest, Opacity/100, kalpha); end ifif ApplyAs ==4; Overlay(xbuffer2, xbuffer, dest, Opacity/100, kalpha); end ifif ApplyAs ==5; Lighten(xbuffer2, xbuffer, dest, Opacity/100, kalpha); end ifif ApplyAs ==6; Darken(xbuffer2, xbuffer, dest, Opacity/100, kalpha); end ifif ApplyAs ==7; 				if GetPixelFormat(xbuffer2) != kFormatRGB255;					dest = xbuffer2;					ConvertImage(dest, xbuffer2, kFormatRGB255);					end if				if GetPixelFormat(xbuffer) != kFormatRGB255;					dest = xbuffer;					ConvertImage(dest, xbuffer, kFormatRGB255);					end if								setpixelformat(dest, kFormatRGB255)				dest = xbuffer2				add(dest, xbuffer, xbuffer2, Opacity/100, kalpha)				ConvertImage(xbuffer2, dest, kFormatYUV219);	end if;if ApplyAs ==8; 				if GetPixelFormat(xbuffer2) != kFormatRGB255;					dest = xbuffer2;					ConvertImage(dest, xbuffer2, kFormatRGB255);					end if				if GetPixelFormat(xbuffer) != kFormatRGB255;					dest = xbuffer;					ConvertImage(dest, xbuffer, kFormatRGB255);					end if								setpixelformat(dest, kFormatRGB255)				dest = xbuffer2				subtract(dest, xbuffer, xbuffer2, Opacity/100, kalpha)				ConvertImage(xbuffer2, dest, kFormatYUV219);	end if;if ApplyAs ==9; 				if GetPixelFormat(xbuffer2) != kFormatRGB255;					dest = xbuffer2;					ConvertImage(dest, xbuffer2, kFormatRGB255);					end if				if GetPixelFormat(xbuffer) != kFormatRGB255;					dest = xbuffer;					ConvertImage(dest, xbuffer, kFormatRGB255);					end if								setpixelformat(dest, kFormatRGB255)				dest = xbuffer2				Difference(dest, xbuffer, xbuffer2, kalpha);				ConvertImage(xbuffer2, dest, kFormatYUV219);					ChannelCopy(src1, dest, kalpha, knone, knone, knone); 				Matte(dest, src1,  dest, Opacity/100, knone); end if;