//                         v3.5 //	                  //	   wvwwvwvww    //	   \                  /  //	     \______/  //	                          	//       Joe's Filters     //   for Final Cut Pro // (C) 2002 Joe Maller// http://www.joesfilters.com// http://www.fxscriptreference.org	filter "Joe's Field Fixer";group "Joe's Video & Time Filters";input field1, "Upper Field", popup, 4, "Upper Field (Previous Frame)", "Lower Field (Previous Frame", "Upper Field", "Lower Field", "Upper Field (Next Frame)", "Lower Field (Next Frame)";input field2, "Lower Field", popup, 3, "Upper Field (Previous Frame)", "Lower Field (Previous Frame", "Upper Field", "Lower Field", "Upper Field (Next Frame)", "Lower Field (Next Frame)";input title, "Joe's Filters", Label,"";input title1, "www.joesfilters.com", Label,"";FullFramecodefloat i, j, sourceDuration, sourceOffset, h, w, pickfield1, pickfield2;point infield1[4], infield2[4], outfield1[4], outfield2[4];dimensionsOf(dest, w, h)image field1src[w][h], field2src[w][h];boundsOf(dest, infield1);infield2 = infield1; outfield1= infield1; outfield2 = infield1;if (field1< 3 || field1 > 4) || (field2 < 3 || field2 > 4)	//field1 or field2 pull from some other frame	getLimits(clip1, sourceDuration, sourceOffset);end if	if field1 < 3	getvideo(clip1, frame - sourceOffset  - 1, field1src);	//get previous frameelse if field1 > 4	getvideo(clip1, frame - sourceOffset  + 1, field1src);	//get next frameelse	field1src = src1;end ifif field2 < 3	if field1 < 3		field2src = field1src;	else		getvideo(clip1, frame - sourceOffset - 1, field2src);	//get previous frame	end ifelse if field2 > 4	if field1 > 4		field2src = field1src;	else		getvideo(clip1, frame - sourceOffset + 1, field2src);	//get next frame	end ifelse	field2src = src1;end ifpickfield1 = (field1+1) mod 2 		// same result as: pickfield = (field1 == 1 || field1 == 5) ? 0 : 1;pickfield2 = (field2+1) mod 2 		// odd fields result in an offset of zero...for i = infield1[0].y to infield1[2].y step 2;		// field1 input	infield1[0].y = i + pickfield1;	infield1[1].y = i + pickfield1;	infield1[2].y = i + pickfield1 + 1;	infield1[3].y = i + pickfield1 + 1;			// field2 input	infield2[0].y = i + pickfield2;	infield2[1].y = i + pickfield2;	infield2[2].y = i + pickfield2 + 1;	infield2[3].y = i + pickfield2 + 1;			// upper output field	outfield1[0].y = i;	outfield1[1].y = i;	outfield1[2].y = i + 1;	outfield1[3].y = i + 1;			// lower output field	outfield2[0].y = i + 1;	outfield2[1].y = i + 1;	outfield2[2].y = i + 2;	outfield2[3].y = i + 2;		Blitrect(field1src, infield1, dest, outfield1);	Blitrect(field2src, infield2, dest, outfield2);	next;