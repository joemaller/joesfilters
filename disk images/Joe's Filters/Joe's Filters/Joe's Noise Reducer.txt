//                         v3.5 //	                  //	   wvwwvwvww    //	   \                  /  //	     \______/  //	                          	//       Joe's Filters     //   for Final Cut Pro // (C) 2002 Joe Maller// http://www.joesfilters.com// http://www.fxscriptreference.org	filter "Joe's Noise Reducer";group "Joe's Noise Filters";input opacity, "Opacity", Slider, 75, 0, 100;input label1, "Edge Detection", Label,"";input edges, "Mask Detail", Slider, 3, 0, 5;input edgefade, "Preserve Edges", Slider, 100, 0, 100;input showmask, "Show Edge Mask", Checkbox, 0;input label3, "Channel Targeting", Label,"";input RGBorYUV, "Color Format", popup, 2, "RGB", "Luma";input rY, "Luma / Red", CheckBox, 1input gU, "Cb / Green", CheckBox, 1input bV, "Cr / Blue", CheckBox, 1input title, "Joe's Filters", Label,"";input title1, "www.joesfilters.com", Label,"";InformationFlag("YUVaware")producesalphacodeexposedbackground= 1;edges =  5 - edges;float w, h, mat[3][3], mdiv, colorSpace;dimensionsOf(dest, w, h);image xbuffer[w][h], xbuffer2[w][h];colorSpace = GetPixelFormat(dest);					//store this for final conversion at the end// edge detection	if (edges > 0)		BlurChannel(src1, dest, edges, 0, 1, 1, 1, aspectOf(dest))	else		dest = src1;	end if		mat = {1, 2, 1, 0, 0, 0, -1, -2, -1} ;	Convolve(dest, xbuffer, mat, 1, 0);		mat = {-1, 0, 1, -2, 0, 2, -1, 0, 1} ;	Convolve(dest, xbuffer2, mat, 1, 0);		if GetPixelFormat(xbuffer) == kFormatYUV219;		channelfill(xbuffer, 255, -1, 128, 128);		channelfill(xbuffer2, 255, -1, 128, 128);	end if		add(xbuffer, xbuffer2, xbuffer, 1, knone);		channelfill(xbuffer, 255, -1, -1, -1);// end edge detectiondest = src1if (integer(aspectOf(dest) + 0.5) > 1)	mat = {1, 1, 1, 4, 0, 4, 1, 1, 1} 	// interlaced median kernal	mdiv = 14; 							// convolve divisor, total of median kernalelse	mat = {1, 1, 1, 1, 0, 1, 1, 1, 1} 	// standard median kernal	mdiv = 8; 							// convolve divisor, total of median kernalend ifif RGBorYUV == 1 // RGB	if (GetPixelFormat(dest) == kFormatYUV219)		ConvertImage(dest, dest, kFormatRGB219);		end ifelse 	// YUV	if (GetPixelFormat(dest) != kFormatYUV219)		ConvertImage(dest, dest, kFormatYUV219);		end ifend ifConvolve(dest, xbuffer2, mat, mdiv, 0);channelcopy(xbuffer, xbuffer2, kred, knone, knone, knone);channelmultiply(xbuffer2, xbuffer2, edgefade/100, 1, 1, 1);	// reduce alphainvertchannel(xbuffer2, xbuffer2, 1, 0, 0, 0);matte(xbuffer2, dest, xbuffer, opacity/100, kalpha);rY = (rY == 1) ? knone : kRed;gU = (gU == 1) ? knone : kGreen;bV = (bV == 1) ? knone : kBlue;ChannelCopy(dest, xbuffer, kalpha, rY, gU, bV);dest = xbuffer;if (showmask)	invertchannel(xbuffer2, xbuffer2, 1, 0, 0, 0);	channelcopy(xbuffer2, xbuffer, kalpha, knone, knone, knone);	if GetPixelFormat(dest) != kFormatYUV219;		channelfill(dest, 255, 0, 0, 0);	else		channelfill(dest, 255, 0, 128, 128);	end if	if GetPixelFormat(xbuffer) != kFormatYUV219;		channelfill(xbuffer, -1, 255, 255, 255);	else		channelfill(xbuffer, -1, 255, 128, 128);	end if	matte(xbuffer, dest, dest, 1, kalpha);end if		if (GetPixelFormat(dest) != colorspace)	ConvertImage(dest, dest, colorspace);end if