on ChannelView(image _src, image _dest, value _colors)

	// requires PlaceFrame.fxscript
	// _src, _dest : source and destination image buffers
	// _colors : boolean switch to show channels in color

	point _dims, _srcBox[4], _destBox[4];
	dimensionsOf(_dest, _dims.x, _dims.y);
	image _temp[_dims.x][_dims.y], _temp2[_dims.x][_dims.y];
	
//	ConvertImage(src1, dest, kFormatYUV219);

	_temp = _src;

	_colors ^= 1;
	boundsOf(_src, _srcBox)
	boundsOf(_dest, _destBox);


	_destBox *= 0.5;
	
	
	if (GetPixelFormat(_dest) == kFormatYUV219)
		channelfill(_temp2, 255, 127, 127, 127);

		channelcopy(_temp, _temp2, knone, kalpha, knone, knone)
		PlaceFrame(_temp2, _dest, _destBox[0], _destBox[2].x * 2, _destBox[2].y * 2, 0, 4)
	
		channelfill(_temp2, 255, 127, 127, 127);

		channelcopy(_temp, _temp2, knone, kred, knone, knone)
		PlaceFrame(_temp2, _dest, _destBox[1], _destBox[2].x * 2, _destBox[2].y * 2,  0, 4)
	
		channelfill(_temp2, 255, 127, 127, 127);
		
		if (!_colors)
			channelcopy(_temp, _temp2, knone, knone, kgreen, knone);
		else
			channelcopy(_temp, _temp2, knone, kgreen, knone, knone);
		end if
		PlaceFrame(_temp2, _dest, _destBox[3], _destBox[2].x * 2, _destBox[2].y * 2,  0, 4)
		
		channelfill(_temp2, 255, 127, 127, 127);

		if (!_colors)
			channelcopy(_temp, _temp2, knone, knone, knone, kblue);
		else
			channelcopy(_temp, _temp2, knone, kblue, knone, knone);
		end if
		PlaceFrame(_temp2, _dest, _destBox[2], _destBox[2].x * 2, _destBox[2].y * 2,  0, 4)

	else
		channelfill(_temp2, 255, 0, 0, 0);
		channelcopy(_temp, _temp2, knone, kalpha, kalpha, kalpha)
		PlaceFrame(_temp2, _dest, _destBox[0], _destBox[2].x * 2, _destBox[2].y * 2, 0, 4)
	
		channelcopy(_temp, _temp2, knone, kred, kred, kred)
		channelMultiply(_temp2, _temp2, 1, 1, _colors, _colors);
		PlaceFrame(_temp2, _dest, _destBox[1], _destBox[2].x * 2, _destBox[2].y * 2,  0, 4)
		
		channelcopy(_temp, _temp2, knone, kgreen, kgreen, kgreen);
		channelMultiply(_temp2, _temp2, 1, _colors, 1, _colors);
		PlaceFrame(_temp2, _dest, _destBox[3], _destBox[2].x * 2, _destBox[2].y * 2,  0, 4)
	
		channelcopy(_temp, _temp2, knone, kblue, kblue, kblue);
		channelMultiply(_temp2, _temp2, 1, _colors, _colors, 1);
		PlaceFrame(_temp2, _dest, _destBox[2], _destBox[2].x * 2, _destBox[2].y * 2,  0, 4)

	end if
end

