on ExtractFields(image _srcIMG, image _topField, image _bottomField)
	
	// faster means of getting both fields of a frame.
	// this is faster than running DeInterlaceFast twice.
	
	// _srcImg, _topField, _bottomField : image buffers for source frame and fields
	// sizes do not matter, results will be scaled to fit

	float _j;
	point _r0[4], _r1[4], _r2[4];
	BoundsOf(_srcIMG, _r0);
	_r1 = _r0;
	
	image _field1[_r1[1].x - _r1[0].x][(_r1[3].y - _r1[0].y) /2], _field2[_r1[1].x - _r1[0].x][(_r1[3].y - _r1[0].y) /2];
	BoundsOf(_field1, _r2);
	
		_r1[0].y += 1;	// shift top row down
		_r1[1].y += 1;
		if ((_r1[3].y - _r1[0].y) & 1) 	// frame height needs to be even
			_r1[2].y += 1;			// shift bottom down one row
			_r1[3].y += 1;
		end if

		if ((_r0[3].y - _r0[0].y) & 1) // odd frame height
			_r0[2].y -= 1; // odd frame height, trim one row off of bottom
			_r0[3].y -= 1;
		end if
									
	BlitRect(_srcIMG, _r0, _field1, _r2);
	BlitRect(_srcIMG, _r1, _field2, _r2);
	
	BoundsOf(_topField, _r1);
	
	BlitRect(_field1, _r2, _bottomField, _r1);

	BoundsOf(_bottomField, _r1);
	makeRect(_r2, _r2[0].x, _r2[0].y - 0.5, _r2[1].x - _r2[0].x, _r2[3].y - _r2[0].y);	// corrects for potential field bouncing
	
	BlitRect(_field2, _r2, _topField, _r1);
		
end
