filter "GetVideo Frame Bug"
group "FXScript Reference";




// this is trying to isolate a bug in GetVideo 

// The main processing shortcut in getVideo is not returning a correct frame when
// the effect is applied in an interlaced clip. 
// the problem is somewhere in the (_field == 0) exception




input FieldPicker, "Field", RadioGroup, 1, "First", "Second";

input checkfield, "Checkfield", checkbox, 1;
input bouncefix, "bouncefix", checkbox, 1;

code





// INCLUDE "DeInterlaceFast.fxscript"  v1.5

on DeInterlaceFast(image _srcIMG, image _destIMG, value _field, value _bounceFix)
	
	// _srcIMG : source image
	// _destIMG : destination image
	// _field : 0 = top field, 1 = bottom field
	// _bounceFix turns on spatial correction, this fixed a getField bug and is needed for occasional field-based de-interlace calls

	// this might fail at some future time if the scaling method in FCP changes

	if (_field != 0 && _field != 1)
		ErrorReporter(dest, "_field must be a boolean");
		return;
	end if	
		
	float _j;
	point _r1[4], _r2[4];
	BoundsOf(_srcIMG, _r1);
	
	if (_field) // second field, shift box down
		_r1[0].y += 1;	// shift top row down
		_r1[1].y += 1;
		if ((_r1[3].y - _r1[0].y) & 1) 	// frame height needs to be even
			_r1[2].y += 1;			// shift bottom down one row
			_r1[3].y += 1;
		end if

	else // first field
		if ((_r1[3].y - _r1[0].y) & 1) // odd frame height
			_r1[2].y -= 1; // odd frame height, trim one row off of bottom
			_r1[3].y -= 1;
		end if
	end if
	image _halfIMG[_r1[1].x - _r1[0].x][(_r1[3].y - _r1[0].y) /2];
	BoundsOf(_halfIMG, _r2);
	BlitRect(_srcIMG, _r1, _halfIMG, _r2); // smash blit (isolates fields)
	
	if (_bounceFix)
		makeRect(_r2, _r2[0].x, _r2[0].y - _field/2, _r2[1].x - _r2[0].x, _r2[3].y - _r2[0].y)	// corrects for  field bouncing
	end if
	BoundsOf(_destIMG, _r1);
	BlitRect(_halfIMG, _r2, _destIMG, _r1);

end

// END "DeInterlaceFast.fxscript"
 


// INCLUDE "getField.fxscript"  v1.4

on getField(clip _clip1, value _offset, image _dest, value _nativeW, value _nativeH, value _field);
	//REQUIRES: 	DeInterlaceFast.fxscript
	//				ErrorReporter.fxscript

	// getField(clip, frame, dest, 720, 480, 1);
	// replacement for GetVideo which returns a single field of interlaced video
	// basic getVideo call plus dinmensions and field selection
	// field is 0 or 1 to match deinterlace functions
	
	// getvideo into half-height buffers appears to return only the upper field (line 0)
	// that means de-intelacing can be skipped for matching fields to save processing
	
	if (_field < 0 || _field > 1)
		ErrorReporter(dest, "_field value out of range");
		return;
	end if
	
	
	if (_field == 0)
		image _half[_nativeW][_nativeH/2];
		point _halfBox[4], _destBox[4];
		boundsOf(_half, _halfBox);
		boundsOf(_dest, _destBox);
		
		if (_halfBox[0] == _destBox[0] && _halfBox[2] == _destBox[2])	// _half is the same size as _dest, skip a blit
		
			getVideo(_clip1, _offset, _dest);

		else		// _half and _dest are different sizes, use blitRect
				
			getVideo(_clip1, _offset, _half);
			blitRect(_half, _halfBox, _dest, _destBox);
		
		end if
		
			
	else // _field == 1
		image _full[_nativeW][_nativeH];
		getVideo(_clip1, _offset, _full);
		DeInterlaceFast(_full, _dest, _field, false);
	end if
	
end	// end getField


// END "getField.fxscript"
 
 




float w,h, clipDUR, clipOFFSET
point inBox[4], outBox[4];
dimensionsOf(dest, w,h);
image img[w][h], imgFULL[w][h*2];
boundsOf(dest, outBox);
boundsOf(imgFULL, inBox);
getLimits(clip1, clipDUR, clipOFFSET);

channelfill(dest, 0,0,0,0);
if (CLIPDUR > 0)

if fieldnumber == checkfield +1
	getVideo(clip1, frame/2 +clipOFFSET, imgFULL);
	deinterlaceFast(imgFULL, dest,(FieldPicker-1), bouncefix);
	getField(clip1, frame/2+clipOFFSET, img, w,h*2,(FieldPicker-1))
	
	difference(img, dest, dest, kalpha);
end if
end if
