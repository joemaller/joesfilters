Filter "ChannelCopy Bug YUV";
group "FXScript Bugs";

input copyFrom, "Copy", RadioGroup, 2, "kRed", "kGreen", "kBlue";

input label_1171129998, "Toggle copy target:", Label, "";

input copyTo, "Copy to: Alpha/Red", Checkbox, 0;

input label_1171129838, "Alpha = Checked", Label, "";
input label_1171130014, "Red = Unchecked", Label, "";

input showChannel, "Show Channel", Checkbox, 1;

InformationFlag("YUVaware");
ProducesAlpha;

code

exposedBackground = 1;

//	This filter demonstrates a bug where ChannelCopy compresses pixel values when when copying any kGreen or kBlue channel to an Alpha channel.
//	The bug occurs in both YUV and RGB. Copying these same channels to Red/Luma works fine.
//
//	To demonstrate the bug:
//		1. apply this filter to a clip, or run it in FXBuilder
//		2. Toggle the "Copy To" checkbox
//			- The diagonal line should shift in value, darker when copying to Alpha
//		3. Compare results between kRed, kGreen and kBlue copy sources.
//			- kBlue and kGreen values shift when targeting alpha, kRed never shifts.
//
//	This may have something to do with loosely typed image buffers, a workaround is to temporarily declare the copy source and destination to be
// 	kFormatRGB255, perform the channelcopy, then declare them back to thier original formats. Both buffers passed to ChannelCopy must be RGB255
// 	or the shift will occur.
//
// 	Tested in FCP 5.1.2 on a MacBook Pro.
//	
//  Joe Maller
//	February 10, 2007	






// Set up extra image; fill dest white/opaque; fill img black/transparent; draw opaque line onto img
point p1, p2; DimensionsOf(dest, p1.x, p1.y); image img[p1.x][p1.y];

ChannelFill(dest, 255, 255, 128, 128); 
ChannelFill(img, 0, 0, 0, 0);	

// the img buffer is intentionally filled with YUV-illegal values, legal values also shift

color k; k = {255, 255, 255, 255}
p1 = {-100,-100}; p2={100,100};
Line(p1, p2, img, k, 25);



if (copyTo == 0)	// Copy channels to Alpha
	if 		(copyFrom == 1); 	ChannelCopy(img, dest,	kred,	knone,	knone,	knone);	
	else if (copyFrom == 2);	ChannelCopy(img, dest,	kgreen,	knone,	knone,	knone);	
	else if (copyFrom == 3);	ChannelCopy(img, dest,	kblue,	knone,	knone,	knone);	
	else if (copyFrom == 4);	ChannelCopy(img, dest,	kalpha,	knone, 	knone,	knone);	
	end if		
else if (copyTo == 1)	// Copy channels to red
	if 		(copyFrom == 1); 	ChannelCopy(img, dest, knone,	kred,	knone, 	knone);	
	else if (copyFrom == 2);	ChannelCopy(img, dest, knone,	kgreen,	knone, 	knone);	
	else if (copyFrom == 3);	ChannelCopy(img, dest, knone,	kblue,	knone, 	knone);	
	else if (copyFrom == 4);	ChannelCopy(img, dest, knone,	kalpha,	knone, 	knone);	
	end if
end if



if (showChannel)	// show the alpha result
	if (copyTo == 0)			// show alpha
		ChannelCopy(dest, dest, knone, kalpha, kalpha, kalpha);
	else if (copyTo == 1)		// show red
		ChannelCopy(dest, dest, knone, kred, kred, kred);
	end if
	ChannelFill(dest, 255, -1, 128, 128);

	// draw white and black reference lines
	p1 = {-10,-50}; p2 = {-10,50}; Line(p1, p2, dest, k, 12);
	k = {255, 0, 0, 0};
	p1 = {10,-50}; p2 = {10,50}; Line(p1, p2, dest, k, 12);
end if
