Filter "ChannelCopy Bug";
group "FXScript Bugs";


input showBug, "Check", RadioGroup, 1, "Red -> Alpha", "Green -> Alpha //bug", "Blue -> Alpha   //bug", "Alpha -> Alpha";

//InformationFlag("YUVaware");
ProducesAlpha;

code

exposedBackground=1;

//	This filter demonstrates a bug where ChannelCopy will shift pixel values when when copying any kGreen or kBlue channel to an Alpha channel.
//

/// the problem appears to be exclusive to ChannelCopy inside a function when copying kGreen or kBlue to the destination Alpha
// This only occurs inside of functions, the identical code works fine in the main body of the effect


// A workaround is to declare both buffers as kFormatRGB255, channelcopy, then declare them back to their original pixel formats

//  -- Joe Maller Feb, 2007	



on ChannelCopyBug(image _src, image _dest)
	// Demonstrate pixel value shifting when moving channels from Green or Blue to Alpha
	if (showBug == 1 ); 	ChannelCopy(_src, _dest,	kred,	knone,	knone,	knone);	
	else if (showBug == 2);	ChannelCopy(_src, _dest,	kgreen,	knone,	knone,	knone);	
	else if (showBug == 3);	ChannelCopy(_src, _dest,	kblue,	knone,	knone,	knone);	
	else if (showBug == 4);	ChannelCopy(_src, _dest,	kalpha,	knone,	knone,	knone);	
	end if
end





// Set up extra image; fill dest white/opaque; fill img black/transparent; draw opaque line onto img
point p1, p2; DimensionsOf(dest, p1.x, p1.y); image img[p1.x][p1.y];

ChannelFill(dest, 255, 255, 255, 255); 
ChannelFill(img, 0, 0, 0, 0);

color k; k = {255, 255, 255, 255}
p1 = {-100,-100}; p2={100,100};
Line(p1, p2, img, k, 25);




// Call the function to demonstrate the bug. Choose different values to see the change between
ChannelCopyBug(img, dest);





// show the alpha result
ChannelCopy(dest, dest, knone, kalpha, kalpha, kalpha);
ChannelFill(dest, 255, -1, -1, -1);

// draw reference lines
p1 = {-10,-50}; p2 = {-10,50}; Line(p1, p2, dest, k, 12);
k = {255, 0, 0, 0};
p1 = {10,-50}; p2 = {10,50}; Line(p1, p2, dest, k, 12);
